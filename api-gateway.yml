spring:
  boot:
    admin:
      client:
        enabled: true
        instance:
          name: api-gateway
        url: http://localhost:8086
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9090/realms/taxi-realm/protocol/openid-connect/certs
  cloud:
    gateway:
      metrics:
        enabled: true
      discovery:
        locator:
          lower-case-service-id: true
      routes:
        - id: passenger-service
          uri: lb://passenger-service
          predicates:
            - Path=/api/passengers/**
          filters:
            - name: RoutingTimeFilter

        - id: driver-service
          uri: lb://driver-service
          predicates:
            - Path=/api/drivers/**, /api/cars/**, /api/assignments/**
          filters:
            - name: RoutingTimeFilter

        - id: rides-service
          uri: lb://rides-service
          predicates:
            - Path=/api/rides/**
          filters:
            - name: RoutingTimeFilter

        - id: authentication-server
          uri: lb://authentication-server
          predicates:
            - Path=/api/auth/**
          filters:
            - name: RoutingTimeFilter

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: RoutingTimeFilter

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
          filters:
            - name: RoutingTimeFilter

        - id: promocode-service
          uri: lb://promocode-service
          predicates:
            - Path=/api/promocodes/**
          filters:
            - name: RoutingTimeFilter

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: '*'
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
    tags:
      application: api-gateway

---
spring:
  config:
    activate:
      on-profile: docker
  boot:
    admin:
      client:
        url: http://admin-server:8086
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/taxi-realm/protocol/openid-connect/certs

logging:
  config: classpath:logback-docker.xml

management:
  zipkin:
    tracing:
      endpoint: http://tracing-server:9411/api/v2/spans

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka/
